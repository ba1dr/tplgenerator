
# Development Notes

This application was created with using of the following libraries, tools and frameworks:

* [Python 3](https://www.python.org/)
* [Django](https://www.djangoproject.com/)
* [PostgreSQL](http://www.postgresql.org/)
* [Gulp.js](http://gulpjs.com/)
* [CoffeeScript](http://coffeescript.org/)
* [Sass](http://sass-lang.com/)
* [Gunicorn](http://gunicorn.org/)
* [Nginx](http://nginx.org/)
* [Git](https://git-scm.com/)

This file describes some development practices and how-to's.


## Prepare Development Environment

First, you need to proceed the same steps as described in [server deployment instructions](./deployment.md).

You may omit the steps related to specific local user. Just make sure that your current user will have the required permissions.

You may use `virtualenv` to manage packages.

You would need to perform at least the following procedures to install development tools on your computer.

It is meant that you run these commands from the application's base directory.

* Install Node.js packet manager (npm)

    `$ sudo apt-get install npm`

* Run `npm` to collect and install required packages. It will take the file `package.json` and process it.

    `$ npm install`

 If any issues occur on this step - you will probably need to manually edit the file `package.json` and resolve the issues. Some of them may occur due to outdated versions. The only solution will be to find working version and use it.

* Install `Gulp` tool (globally)

    `$ sudo npm install gulp -g`


## Building Application

The application is shipped as already built. But if you make any changes - you may need to build sources.

Build procedure is automated and will do the following tasks:

* Compile .coffee-files to JavaScript and combine them into one packed file

* Compile .sass-files into CSS and combine them into one packed file

* Collect and combine third-party source js/css files and merge them into packed files

* Optimize image files with the [imagemin](https://github.com/sindresorhus/gulp-imagemin) script

* Place all processed files from the folder `<%= @project_name %>/dev/` to `<%= @project_name %>/static/`.

To build the application you need to execute the following shell command from the application's directory:

    `$ gulp build`

You can see errors in the console output. Fix the issues and re-run building.


## Change the Theme

By default application uses one of the themes from [Bootswatch](https://bootswatch.com/). You may want to change it.

Edit the file `gulp/config.js` and change the line with variable `bootswatch_theme` definition. Set the name of desired theme there.

After that you need to rebuild the application with `gulp`:

    `$ gulp build`
